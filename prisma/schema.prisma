// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Address {
  id         String  @default(cuid()) @id
  line1      String
  line2      String?
  city       String
  state      String
  postalCode String
  country    String
  business   Business? @relation(fields: [businessId], references: [id])
  businessId String?
  user       User? @relation(fields: [userId], references: [id])
  userId     String?
  createdAt  DateTime  @default(now()) @map(name: "created_at")
  updatedAt  DateTime  @updatedAt @map(name: "updated_at")
}

model Business {
  id        String  @default(cuid()) @id
  name      String
  owner     User    @relation(fields: [ownerId], references: [id])
  ownerId   String
  address   Address[]
  createdAt DateTime  @default(now()) @map(name: "created_at")
  updatedAt DateTime  @updatedAt @map(name: "updated_at")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String    @id @default(cuid())
  name          String
  email         String    @unique
  emailVerified DateTime? @map("email_verified")
  image         String?
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  accounts      Account[]
  addresses     Address[]
  businesses    Business[]
  sessions      Session[]

  @@map(name: "users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}
